{"version":3,"sources":["api/themoviedb.js","AppConfig.js","components/ReleaseYear/ReleaseYear.js","components/MoviesListItem/MoviesListItem.js","components/MoviesList/MoviesList.js","components/HomePage/HomePage.js"],"names":["apiKey","TMDB_API_KEY","axios","defaults","baseURL","params","api_key","images300Root","getTrending","get","then","res","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews","searchMovie","query","ReleaseYear","date","year","Date","getFullYear","isNaN","toString","parseDate","MoviesListItem","item","path","key","id","to","title","name","release_date","MoviesList","itemsList","map","HomePage","useState","trendingList","setTrendingList","useEffect","results","className"],"mappings":"gWAGMA,ECHY,CAChBC,aAAc,oCDESA,aAEzBC,IAAMC,SAASC,QAAU,+BACzBF,IAAMC,SAASE,OAAS,CACtBC,QAASN,GAGJ,IAAMO,EAAgB,mCAEhBC,EAAc,kBAAMN,IAAMO,IAAI,sBAAsBC,MAAK,SAACC,GAAD,OAASA,EAAIC,SAEtEC,EAAkB,SAACC,GAAD,OAAaZ,IAAMO,IAAN,iBAAoBK,IAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAEhFG,EAAkB,SAACD,GAAD,OAAaZ,IAAMO,IAAN,iBAAoBK,EAApB,aAAuCJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAExFI,EAAkB,SAACF,GAAD,OAAaZ,IAAMO,IAAN,iBAAoBK,EAApB,aAAuCJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAExFK,EAAc,SAACC,GAAD,OAAWhB,IAAMO,IAAN,8BAAiCS,IAASR,MAAK,SAACC,GAAD,OAASA,EAAIC,U,gCEpBlG,oBAceO,IAZK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KASrB,OAAO,kBAAC,WAAD,KARW,WAChB,IAAMC,EAAO,IAAIC,KAAKF,GAAMG,cAC5B,OAAIC,MAAMH,GACD,GAEH,IAAN,OAAWA,EAAKI,WAAhB,KAGgBC,M,mECCLC,EARQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACrB,wBAAIC,IAAKF,EAAKG,IACZ,kBAAC,IAAD,CAAMC,GAAE,UAAKH,EAAL,YAAaD,EAAKG,KACvBH,EAAKK,OAASL,EAAKM,KADtB,IAC4B,kBAACf,EAAA,EAAD,CAAaC,KAAMQ,EAAKO,kBCAzCC,IAJI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACjB,4BAAKA,EAAUC,KAAI,SAACV,GAAD,OAAU,kBAAC,EAAD,CAAgBE,IAAKF,EAAKG,GAAIH,KAAMA,EAAMC,KAAM,kB,mFCiBhEU,UAjBE,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBACbC,EADa,KACCC,EADD,KASrB,OANAC,qBAAU,WACRnC,cAAcE,MAAK,SAACE,GAClB8B,EAAgB9B,EAAKgC,cAEtB,IAGD,yBAAKC,UAAU,aACb,8CACA,kBAAC,IAAD,CAAYR,UAAWI","file":"static/js/home-page.c1f501d7.chunk.js","sourcesContent":["import axios from 'axios';\nimport AppConfig from '../AppConfig';\n\nconst apiKey = AppConfig.TMDB_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: apiKey\n};\n\nexport const images300Root = 'https://image.tmdb.org/t/p/w300/';\n\nexport const getTrending = () => axios.get('/trending/all/week').then((res) => res.data);\n\nexport const getMovieDetails = (movieId) => axios.get(`/movie/${movieId}`).then((res) => res.data);\n\nexport const getMovieCredits = (movieId) => axios.get(`/movie/${movieId}/credits`).then((res) => res.data);\n\nexport const getMovieReviews = (movieId) => axios.get(`/movie/${movieId}/reviews`).then((res) => res.data);\n\nexport const searchMovie = (query) => axios.get(`/search/movie?query=${query}`).then((res) => res.data);\n","const AppConfig = {\n  TMDB_API_KEY: '8125804d73b84623c60519ecab083b7f',\n};\n\nexport default AppConfig;\n","import React, { Fragment } from 'react';\n\nconst ReleaseYear = ({ date }) => {\n  const parseDate = () => {\n    const year = new Date(date).getFullYear();\n    if (isNaN(year)) {\n      return '';\n    }\n    return `(${year.toString()})`;\n  };\n\n  return <Fragment>{parseDate()}</Fragment>;\n};\n\nexport default ReleaseYear;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReleaseYear from '../ReleaseYear/ReleaseYear';\n\nconst MoviesListItem = ({ item, path }) => (\n  <li key={item.id}>\n    <Link to={`${path}/${item.id}`}>\n      {item.title || item.name} <ReleaseYear date={item.release_date} />\n    </Link>\n  </li>\n);\n\nexport default MoviesListItem;\n","import React from 'react';\nimport MoviesListItem from '../MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ itemsList }) => (\n  <ul>{itemsList.map((item) => <MoviesListItem key={item.id} item={item} path={'/movies'} />)}</ul>\n);\n\nexport default MoviesList;\n","import React, { useState, useEffect } from 'react';\nimport { getTrending } from '../../api/themoviedb';\nimport MoviesList from '../MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [ trendingList, setTrendingList ] = useState([]);\n\n  useEffect(() => {\n    getTrending().then((data) => {\n      setTrendingList(data.results);\n    });\n  }, []);\n\n  return (\n    <div className=\"home-page\">\n      <h1>Trending today</h1>\n      <MoviesList itemsList={trendingList} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}