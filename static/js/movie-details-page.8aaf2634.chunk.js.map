{"version":3,"sources":["api/themoviedb.js","AppConfig.js","components/ReleaseYear/ReleaseYear.js","components/MovieDetailsPage/MoviesDetailsPageContext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieDetailsPage/AdditionalInfo/AdditionalInfo.js","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["apiKey","TMDB_API_KEY","axios","defaults","baseURL","params","api_key","images300Root","getTrending","get","then","res","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews","searchMovie","query","ReleaseYear","date","year","Date","getFullYear","isNaN","toString","parseDate","createContext","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","lazy","Reviews","AdditionalInfo","url","useContext","Context","Consumer","path","component","exact","to","MovieDetailsPage","match","history","useState","movieDetails","setMovieDetails","state","useEffect","className","onClick","goBack","poster_path","src","alt","title","release_date","vote_average","overview","genres","map","item","id","name","replace","pathname","Provider"],"mappings":"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","file":"static/js/movie-details-page.8aaf2634.chunk.js","sourcesContent":["import axios from 'axios';\nimport AppConfig from '../AppConfig';\n\nconst apiKey = AppConfig.TMDB_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: apiKey\n};\n\nexport const images300Root = 'https://image.tmdb.org/t/p/w300/';\n\nexport const getTrending = () => axios.get('/trending/all/week').then((res) => res.data);\n\nexport const getMovieDetails = (movieId) => axios.get(`/movie/${movieId}`).then((res) => res.data);\n\nexport const getMovieCredits = (movieId) => axios.get(`/movie/${movieId}/credits`).then((res) => res.data);\n\nexport const getMovieReviews = (movieId) => axios.get(`/movie/${movieId}/reviews`).then((res) => res.data);\n\nexport const searchMovie = (query) => axios.get(`/search/movie?query=${query}`).then((res) => res.data);\n","const AppConfig = {\n  TMDB_API_KEY: '8125804d73b84623c60519ecab083b7f',\n};\n\nexport default AppConfig;\n","import React, { Fragment } from 'react';\n\nconst ReleaseYear = ({ date }) => {\n  const parseDate = () => {\n    const year = new Date(date).getFullYear();\n    if (isNaN(year)) {\n      return '';\n    }\n    return `(${year.toString()})`;\n  };\n\n  return <Fragment>{parseDate()}</Fragment>;\n};\n\nexport default ReleaseYear;\n","import { createContext } from 'react';\n\nexport default createContext();","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { lazy, useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Context from '../MoviesDetailsPageContext';\n\nconst Cast = lazy(() => import('./Cast/Cast' /* webpackChunkName: \"cast-page\" */));\nconst Reviews = lazy(() => import('./Reviews/Reviews' /* webpackChunkName: \"reviews-page\" */));\n\nconst AdditionalInfo = () => {\n  const { url } = useContext(Context);\n\n  return (\n    <Context.Consumer>\n      {() => {\n        return (\n          <Switch>\n            <Route path={`${url}/cast`} component={Cast} exact />\n            <Route path={`${url}/reviews`} component={Reviews} exact />\n            <Redirect to={url} />\n          </Switch>\n        );\n      }}\n    </Context.Consumer>\n  );\n};\n\nexport default AdditionalInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovieDetails, images300Root } from '../../api/themoviedb';\nimport Context from './MoviesDetailsPageContext';\n\nimport ReleaseYear from '../ReleaseYear/ReleaseYear';\nimport AdditionalInfo from './AdditionalInfo/AdditionalInfo';\n\nconst MovieDetailsPage = ({ match, history }) => {\n  const { movieId } = match.params;\n  const { url } = match;\n\n  const [ movieDetails, setMovieDetails ] = useState({});\n  const [ state ] = useState({ movieId, url });\n\n  const handleClickBack = () => {\n    history.goBack();\n  };\n\n  const handleMovieDetails = () => {\n    getMovieDetails(movieId).then((data) => {\n      setMovieDetails({ ...movieDetails, ...data });\n    });\n  };\n\n  useEffect(handleMovieDetails, []);\n\n  return (\n    <div className=\"movie-details-page\">\n      <button className=\"back-button\" onClick={handleClickBack}>\n        {'< back'}\n      </button>\n      <div className=\"details-main\">\n        {movieDetails.poster_path ? (\n          <img className=\"poster-image\" src={`${images300Root}${movieDetails.poster_path}`} alt={movieDetails.title} />\n        ) : (\n          <p className=\"no-poster\">no poster</p>\n        )}\n\n        <div className=\"overview\">\n          <h1>\n            {movieDetails.title} <ReleaseYear date={movieDetails.release_date} />\n          </h1>\n          <p>User Score: {movieDetails.vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n\n          <h3>Genres</h3>\n          <p>\n            {movieDetails.genres &&\n              movieDetails.genres.map((item) => <span key={item.id}>{item.name}&nbsp;&nbsp;&nbsp;</span>)}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"more-info\">\n        <hr />\n        <h4>Additional inpormation</h4>\n        <ul>\n          <li>\n            <Link\n              replace\n              to={{\n                pathname: `${url}/cast`,\n                state: { movieId: movieId }\n              }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              replace\n              to={{\n                pathname: `${url}/reviews`,\n                state: { movieId: movieId }\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Context.Provider value={state}>\n          <AdditionalInfo url={url} />\n        </Context.Provider>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}